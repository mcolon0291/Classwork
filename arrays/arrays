// ARRAYS



//indexes :      0      1       2
// (Arrays) let learners = [24,    'Jade',  true]
// learners[0]


// // console.log(learners.length)
// console.log(learners[3][0])

//PUSH method- adds one part of the array at the end.
// learners.push('4')
// learners.push(false)
// learners.push(100)

// //POP method- removes one part of the array at the end.
// learners.pop()



// //SHIFT method- removes a part of the array from the front
// learners.shift ()


//UNSHIFT method- adds a part of the array at the front. 
// learners.unshift

// let learners =['kristy, Nathan, Ronald]
// let learners2 =['Jade', 'Rixio' 'Teo']

// //Spread opeartor
// let everybody = [. . . learners, . . .learners2]

// console.log(everybody)


//Rest parameters


// function add(...numbers) {
   //first index is always 0
   //last index is always length of aaray -1

   
   
//     console.log(numbers)

// }

// add(4,5,6,10,100,50 )


// Strings 
//firstName.split('.') string method
// arrOfStrs.join('.') array method

// for (let i =0; i < firstName. length; i++)
// //console.log(firstName.charAT(i).toLowercase)

//SPLICE -ARRAY METHOD
// let arr= [3, 10, 15]
// arr.splice (0,1)- //removed one item from the array 

// console.log (arr)


// let fruit =['apple' , 'pear', 'banana', 'kiwi']
//  fruit.splice(1,3)
//  console.log(fruit)

//SLICE -ARRAY METHOD
// letfruit2= fruit.slice()

// console.log('fruit:', fruit)
// console.log('fruit2: ', fruit2)

let food =[ 'kimichi', 'tacos', 'arepa', 'spam']

//for loops 
// for (let i= 0; i <food.length; i++)

//while loops
//while (i< food.length)

//for of 
//for (let item of foods)

//forEach (build-in-array method)
// foods.forEach(function(foodItem){
//     console.log(foodItem)
// })


// Anonymous function
// function(){
// }

//filter (built-in array)


// //map (built-in array method)
// let brandNewArray = foods.map(function(item, idx))

// //callback functions
// const myForEachFunction = function (){

// }

// assignment
// example 1-

// function maxOfTwoNumbers(num1, num2){
//  if(num1>=num2){
//     return num1
// } else {return num2}
// }
//  console.log(maxOfTwoNumbers(0,1))


//  example 2-
// function maxOfThree(num1, num2, num3){
//     if(num1>=num2 && num1>=num3){
//      return num1
//     }else if (num2 >= num1 && num2 >= num3){
//      return num2
//     }else if (num3 >=num1 && num3 >=num2){
//         return num3
//     }
//  }
//      console.log(maxOfThree(5,6,7))

// //example 3- 
// function isCharAVowel (string){
//     if (string == 'A' || string == 'E' || string == 'I' || string == "O" ||
//    string =='U') {
//      return true;
//    } else {
//     return false;
//    }
// }
// console.log (isCharAVowel('T'))

// //example 4- 
// function sumArray(ourArray) {
//     const ourArray = [1, 4, 0, 9, -3];
//     let sum = 0; 

// for (let i = 0; i < ourArray.length; i += 1) {
//     sum += ourArray[i];
// }

// return sum; 
// }
// console.log(sumArray([1, 4, 0, 9, -3]));

//example 5

// function multiplyArray (arg){
// let muliply = 1; 
// for (i=0; i <arg.length; i++){
//     multiply=arg[i];
// }
// return multiply;
// }
//  console.log(multiplyArray([3,0]))


// example 6



//map
//filter
+//forEach 

//Example 1 -
// const nums = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 ]
// const panagram =[ ]
// //array methods take a callback function as an argument
// //callbacks are functions that will run at a later time

// nums.forEach()


//filter method

// nums.filter(function(value) {
//     return value >= 4; 
// });

// // Find- find the first value divisble by 5 //
// let foundElement = nums.find((element => element % 11 === 0))

// //find the first word that is longer than 5 characters

// paragram.find((element)) => element.length > 5)

// Find Index

// let findNums = nums.findIndex((element) => element % 3 ==0)
// console.log(findNum)

// let findWrd = panagram.findIndex((element => element.length))


const multiplyByHundred = nums3.map(num => num * 100)
console.log(multiplyByHundred)